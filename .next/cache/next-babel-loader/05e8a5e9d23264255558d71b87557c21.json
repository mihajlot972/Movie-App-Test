{"ast":null,"code":"var _jsxFileName = \"/home/mihajlot/movie-app-test/pages/index.jsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Head from 'next/head';\nimport { getPopularMovies, searchMovie } from '../services/movie-service';\nimport MovieCard from '../components/MovieCard/MovieCard';\nimport Layout from '../components/Layout/Layout';\nimport LoadMore from '../components/Shared/LoadMore/LoadMore';\nimport Search from '../components/Shared/Search/Search';\nimport EmptyItem from '../components/EmptyItem/EmptyItem';\nexport async function getStaticProps() {\n  const popularMovies = await getPopularMovies();\n  return {\n    props: {\n      popularMovies\n    }\n  };\n}\nexport default function Home({\n  popularMovies\n}) {\n  const {\n    0: page,\n    1: setPage\n  } = useState(2);\n  const {\n    0: currentMovies,\n    1: setCurrentMovies\n  } = useState(popularMovies.results);\n  const {\n    0: search,\n    1: setSearch\n  } = useState(\"\");\n  let searchTimeout;\n  useEffect(() => {\n    if (search.length <= 1) {\n      setCurrentMovies(popularMovies.results);\n    }\n  }, [search]);\n\n  async function paginate() {\n    const paginatedMovies = await getPopularMovies(page);\n    console.log(paginatedMovies.results);\n    setCurrentMovies([...currentMovies, ...paginatedMovies.results]);\n    setPage(page => page + 1);\n  }\n\n  async function handleSearch(event) {\n    event.persist(); // Adding timeout for performance reasons\n\n    clearTimeout(searchTimeout);\n    searchTimeout = setTimeout(async () => {\n      let searchValue = event.target.value;\n      setSearch(searchValue);\n\n      if (searchValue.length > 1) {\n        let searchedQuery = await searchMovie(searchValue);\n\n        if (searchedQuery.results) {\n          searchedQuery.results.sort((a, b) => {\n            return b.vote_average - a.vote_average;\n          });\n          setCurrentMovies(searchedQuery.results);\n        }\n      }\n    }, 500);\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, __jsx(Search, {\n    placeholder: \"search for movies\",\n    onChange: event => handleSearch(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, \"Movie App\"), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  })), __jsx(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, currentMovies.length > 0 ? __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 39\n    }\n  }, currentMovies.map(movie => {\n    return __jsx(\"div\", {\n      key: movie.id,\n      className: \"movie-col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, __jsx(MovieCard, {\n      id: movie.id,\n      poster_path: movie.poster_path,\n      title: movie.title,\n      overview: movie.overview,\n      release_date: movie.release_date,\n      vote_average: movie.vote_average,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 19\n      }\n    }));\n  })) : __jsx(EmptyItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 20\n    }\n  }, \"Sorry, couldn't find any movie regarding this keyword :/\"), search.length === 0 ? __jsx(LoadMore, {\n    paginate: paginate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 34\n    }\n  }) : null)));\n}","map":{"version":3,"sources":["/home/mihajlot/movie-app-test/pages/index.jsx"],"names":["React","useState","useEffect","Head","getPopularMovies","searchMovie","MovieCard","Layout","LoadMore","Search","EmptyItem","getStaticProps","popularMovies","props","Home","page","setPage","currentMovies","setCurrentMovies","results","search","setSearch","searchTimeout","length","paginate","paginatedMovies","console","log","handleSearch","event","persist","clearTimeout","setTimeout","searchValue","target","value","searchedQuery","sort","a","b","vote_average","display","flexWrap","map","movie","id","poster_path","title","overview","release_date"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Head from 'next/head';\nimport { getPopularMovies, searchMovie } from '../services/movie-service';\nimport MovieCard from '../components/MovieCard/MovieCard';\nimport Layout from '../components/Layout/Layout';\nimport LoadMore from '../components/Shared/LoadMore/LoadMore';\nimport Search from '../components/Shared/Search/Search';\nimport EmptyItem from '../components/EmptyItem/EmptyItem';\n\n\nexport async function getStaticProps() {\n  const popularMovies = await getPopularMovies();\n  return { props: { popularMovies } }\n}\n\nexport default function Home({ popularMovies }) {\n  const [page, setPage] = useState(2);\n  const [currentMovies, setCurrentMovies] = useState(popularMovies.results);\n  const [search, setSearch] = useState(\"\");\n  let searchTimeout;\n\n  useEffect(() => {\n    if (search.length <= 1) {\n      setCurrentMovies(popularMovies.results)\n    }\n  }, [search])\n\n  async function paginate() {\n    const paginatedMovies = await getPopularMovies(page);\n    console.log(paginatedMovies.results);\n    setCurrentMovies([...currentMovies, ...paginatedMovies.results]);\n    setPage(page => page + 1);\n  }\n\n  async function handleSearch(event) {\n    event.persist();\n\n    // Adding timeout for performance reasons\n    clearTimeout(searchTimeout);\n    searchTimeout = setTimeout(async () => {\n      let searchValue = event.target.value;\n      setSearch(searchValue);\n\n      if (searchValue.length > 1) {\n        let searchedQuery = await searchMovie(searchValue);\n        if (searchedQuery.results) {\n          searchedQuery.results.sort((a, b) => {\n            return b.vote_average - a.vote_average;\n          })\n          setCurrentMovies(searchedQuery.results)\n        }\n      }\n    }, 500);\n  }\n\n\n  return (\n    <div>\n      <Layout>\n        <Search placeholder=\"search for movies\" onChange={(event) => handleSearch(event)} />\n        <Head>\n          <title>Movie App</title>\n          <link rel=\"icon\" href=\"/favicon.ico\" />\n        </Head>\n\n        <main>\n          {currentMovies.length > 0 ? <div style={{ display: 'flex', flexWrap: 'wrap' }}>\n            {currentMovies.map(movie => {\n              return (\n                <div key={movie.id} className=\"movie-col\">\n                  <MovieCard\n                    id={movie.id}\n                    poster_path={movie.poster_path}\n                    title={movie.title}\n                    overview={movie.overview}\n                    release_date={movie.release_date}\n                    vote_average={movie.vote_average}\n                  />\n                </div>\n              )\n            })}\n          </div> : <EmptyItem>Sorry, couldn't find any movie regarding this keyword :/</EmptyItem>}\n          {search.length === 0 ? <LoadMore paginate={paginate} /> : null}\n        </main>\n      </Layout>\n    </div>\n  )\n}\n\n"]},"metadata":{},"sourceType":"module"}