{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport api from '../config/tmdb-api.json';\nimport makeApiRequest, { postWithBody } from './ApiRequest'; // Potentionally could be transformed to factory function\n// for getting Movie data \n\nfunction getPopularMovies(_x) {\n  return _getPopularMovies.apply(this, arguments);\n}\n\nfunction _getPopularMovies() {\n  _getPopularMovies = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(page) {\n    var popularMovies;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return makeApiRequest({\n              url: api.popular_movies,\n              method: 'GET',\n              page: page\n            });\n\n          case 3:\n            popularMovies = _context.sent;\n            return _context.abrupt(\"return\", popularMovies);\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            throw _context.t0;\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 7]]);\n  }));\n  return _getPopularMovies.apply(this, arguments);\n}\n\nfunction getTopRatedMovies(_x2) {\n  return _getTopRatedMovies.apply(this, arguments);\n}\n\nfunction _getTopRatedMovies() {\n  _getTopRatedMovies = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(page) {\n    var topRatedMovies;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return makeApiRequest({\n              url: api.top_rated_movies,\n              method: 'GET',\n              page: page\n            });\n\n          case 3:\n            topRatedMovies = _context2.sent;\n            return _context2.abrupt(\"return\", topRatedMovies);\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            throw _context2.t0;\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 7]]);\n  }));\n  return _getTopRatedMovies.apply(this, arguments);\n}\n\nfunction getMovieDetails(_x3) {\n  return _getMovieDetails.apply(this, arguments);\n}\n\nfunction _getMovieDetails() {\n  _getMovieDetails = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(movieId) {\n    var movieDetails;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return makeApiRequest({\n              url: api.movie_details + movieId,\n              method: 'GET'\n            });\n\n          case 3:\n            movieDetails = _context3.sent;\n            return _context3.abrupt(\"return\", movieDetails);\n\n          case 7:\n            _context3.prev = 7;\n            _context3.t0 = _context3[\"catch\"](0);\n            throw _context3.t0;\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[0, 7]]);\n  }));\n  return _getMovieDetails.apply(this, arguments);\n}\n\nfunction getUpcomingMovies(_x4) {\n  return _getUpcomingMovies.apply(this, arguments);\n}\n\nfunction _getUpcomingMovies() {\n  _getUpcomingMovies = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(page) {\n    var upcomingMovies;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return makeApiRequest({\n              url: api.upcoming_movies,\n              method: 'GET',\n              page: page\n            });\n\n          case 3:\n            upcomingMovies = _context4.sent;\n            return _context4.abrupt(\"return\", upcomingMovies);\n\n          case 7:\n            _context4.prev = 7;\n            _context4.t0 = _context4[\"catch\"](0);\n            throw _context4.t0;\n\n          case 10:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[0, 7]]);\n  }));\n  return _getUpcomingMovies.apply(this, arguments);\n}\n\nfunction searchMovie(_x5) {\n  return _searchMovie.apply(this, arguments);\n}\n\nfunction _searchMovie() {\n  _searchMovie = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(searchText) {\n    var searchMovies;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            if (!(searchText.length === 0)) {\n              _context5.next = 2;\n              break;\n            }\n\n            return _context5.abrupt(\"return\", {\n              results: []\n            });\n\n          case 2:\n            _context5.prev = 2;\n            _context5.next = 5;\n            return makeApiRequest({\n              url: api.search_movies,\n              method: 'GET',\n              query: searchText\n            });\n\n          case 5:\n            searchMovies = _context5.sent;\n            return _context5.abrupt(\"return\", searchMovies);\n\n          case 9:\n            _context5.prev = 9;\n            _context5.t0 = _context5[\"catch\"](2);\n            console.log(_context5.t0);\n\n          case 12:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[2, 9]]);\n  }));\n  return _searchMovie.apply(this, arguments);\n}\n\nfunction getFavoriteMovies(_x6, _x7) {\n  return _getFavoriteMovies.apply(this, arguments);\n}\n\nfunction _getFavoriteMovies() {\n  _getFavoriteMovies = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(account_id, session_id) {\n    var favoriteMovies;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            console.log(account_id);\n            console.log(session_id);\n            _context6.prev = 2;\n            _context6.next = 5;\n            return makeApiRequest({\n              url: \"\".concat(api.favorite_movies).concat(account_id, \"/favorite/movies\"),\n              method: 'GET',\n              session_id: session_id\n            });\n\n          case 5:\n            favoriteMovies = _context6.sent;\n            return _context6.abrupt(\"return\", favoriteMovies);\n\n          case 9:\n            _context6.prev = 9;\n            _context6.t0 = _context6[\"catch\"](2);\n            throw _context6.t0;\n\n          case 13:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[2, 9]]);\n  }));\n  return _getFavoriteMovies.apply(this, arguments);\n}\n\nfunction markFavoriteMovie(_x8, _x9, _x10) {\n  return _markFavoriteMovie.apply(this, arguments);\n}\n\nfunction _markFavoriteMovie() {\n  _markFavoriteMovie = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(movie_id, account_id, session_id) {\n    var favorite,\n        addToFavorite,\n        _args7 = arguments;\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            favorite = _args7.length > 3 && _args7[3] !== undefined ? _args7[3] : true;\n            _context7.prev = 1;\n            _context7.next = 4;\n            return postWithBody({\n              url: \"\".concat(api.mark_favorite).concat(account_id, \"/favorite\"),\n              method: 'POST',\n              media_id: movie_id,\n              favorite: favorite,\n              media_type: 'movie',\n              session_id: session_id\n            });\n\n          case 4:\n            addToFavorite = _context7.sent;\n            return _context7.abrupt(\"return\", addToFavorite);\n\n          case 8:\n            _context7.prev = 8;\n            _context7.t0 = _context7[\"catch\"](1);\n            throw _context7.t0;\n\n          case 11:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7, null, [[1, 8]]);\n  }));\n  return _markFavoriteMovie.apply(this, arguments);\n}\n\nexport { getPopularMovies, getTopRatedMovies, getMovieDetails, getUpcomingMovies, getFavoriteMovies, markFavoriteMovie, searchMovie };","map":{"version":3,"sources":["/home/mihajlot/movie-app-test/services/movie-service.js"],"names":["api","makeApiRequest","postWithBody","getPopularMovies","page","url","popular_movies","method","popularMovies","getTopRatedMovies","top_rated_movies","topRatedMovies","getMovieDetails","movieId","movie_details","movieDetails","getUpcomingMovies","upcoming_movies","upcomingMovies","searchMovie","searchText","length","results","search_movies","query","searchMovies","console","log","getFavoriteMovies","account_id","session_id","favorite_movies","favoriteMovies","markFavoriteMovie","movie_id","favorite","mark_favorite","media_id","media_type","addToFavorite"],"mappings":"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","sourcesContent":["import api from '../config/tmdb-api.json';\nimport makeApiRequest, { postWithBody } from './ApiRequest';\n\n// Potentionally could be transformed to factory function\n// for getting Movie data \n\nasync function getPopularMovies(page) {\n    try {\n        const popularMovies = await makeApiRequest({\n            url: api.popular_movies,\n            method: 'GET',\n            page: page,\n        })\n        return popularMovies\n    } catch (err) {\n        throw err;\n    }\n}\n\nasync function getTopRatedMovies(page) {\n    try {\n        const topRatedMovies = await makeApiRequest({\n            url: api.top_rated_movies,\n            method: 'GET',\n            page: page\n        })\n        return topRatedMovies\n    } catch (err) {\n        throw err;\n    }\n}\n\nasync function getMovieDetails(movieId) {\n    try {\n        const movieDetails = await makeApiRequest({\n            url: api.movie_details + movieId,\n            method: 'GET'\n        })\n        return movieDetails\n    } catch (err) {\n        throw err;\n    }\n}\n\nasync function getUpcomingMovies(page) {\n    try {\n        const upcomingMovies = await makeApiRequest({\n            url: api.upcoming_movies,\n            method: 'GET',\n            page: page\n        })\n        return upcomingMovies\n    } catch (err) {\n        throw err;\n    }\n}\n\nasync function searchMovie(searchText) {\n    // Fallback for instant text input removal\n    if (searchText.length === 0) {\n        return {results: []};\n    }\n    try {\n        const searchMovies = await makeApiRequest({\n            url: api.search_movies,\n            method: 'GET',\n            query: searchText\n        });\n        return searchMovies;\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nasync function getFavoriteMovies(account_id, session_id) {\n    console.log(account_id)\n    console.log(session_id)\n    try {\n        const favoriteMovies = await makeApiRequest({\n            url: `${api.favorite_movies}${account_id}/favorite/movies`,\n            method: 'GET',\n            session_id: session_id\n        })\n        return favoriteMovies\n    } catch (err) {\n        throw err;;\n    }\n}\n\nasync function markFavoriteMovie(movie_id, account_id, session_id, favorite=true) {\n    try {\n        const addToFavorite = await postWithBody({\n            url: `${api.mark_favorite}${account_id}/favorite`,\n            method: 'POST',\n            media_id: movie_id,\n            favorite: favorite,\n            media_type: 'movie',\n            session_id: session_id,\n        })\n        return addToFavorite\n    } catch (err) {\n        throw err;\n    }\n}\n\nexport {\n    getPopularMovies,\n    getTopRatedMovies,\n    getMovieDetails,\n    getUpcomingMovies,\n    getFavoriteMovies,\n    markFavoriteMovie,\n    searchMovie\n}"]},"metadata":{},"sourceType":"module"}