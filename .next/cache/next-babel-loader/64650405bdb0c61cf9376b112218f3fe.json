{"ast":null,"code":"var _jsxFileName = \"/home/mihajlot/movie-app-test/pages/movies/upcoming-movies.jsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport MovieCard from '../../components/MovieCard/MovieCard';\nimport EmptyItem from '../../components/EmptyItem/EmptyItem';\nimport Layout from '../../components/Layout/Layout';\nimport Head from 'next/head';\nimport LoadMore from '../../components/Shared/LoadMore/LoadMore';\nimport { getUpcomingMovies, searchMovie } from '../../services/movie-service';\nimport Search from '../../components/Shared/Search/Search';\nexport async function getStaticProps() {\n  const upcomingMovies = await getUpcomingMovies();\n  return {\n    props: {\n      upcomingMovies\n    }\n  };\n}\nexport default function UpcomingMovies({\n  upcomingMovies\n}) {\n  const {\n    0: page,\n    1: setPage\n  } = useState(2);\n  const {\n    0: search,\n    1: setSearch\n  } = useState(\"\");\n  const {\n    0: currentMovies,\n    1: setCurrentMovies\n  } = useState(upcomingMovies.results);\n  let searchTimeout;\n  useEffect(() => {\n    if (search.length <= 1) {\n      setCurrentMovies(upcomingMovies.results);\n    }\n  }, [search]);\n\n  async function paginate() {\n    const paginatedMovies = await getUpcomingMovies(page);\n    setCurrentMovies([...currentMovies, ...paginatedMovies.results]);\n    setPage(page => page + 1);\n  }\n\n  async function handleSearch(event) {\n    event.persist();\n    clearTimeout(searchTimeout);\n    searchTimeout = setTimeout(async () => {\n      let searchValue = event.target.value;\n      setSearch(searchValue);\n\n      if (searchValue.length > 1) {\n        let searchedQuery = await searchMovie(searchValue);\n\n        if (searchedQuery.results) {\n          searchedQuery.results.sort((a, b) => {\n            return b.vote_average - a.vote_average;\n          });\n          setCurrentMovies(searchedQuery.results);\n        }\n      }\n    }, 500);\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, __jsx(Search, {\n    onChange: handleSearch,\n    placeholder: \"search for movies\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }), __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, \"Upcoming Movies\"), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  })), currentMovies.length > 0 ? __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 45\n    }\n  }, currentMovies.map(movie => {\n    return __jsx(\"div\", {\n      key: movie.id,\n      className: \"movie-col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 29\n      }\n    }, __jsx(MovieCard, {\n      id: movie.id,\n      poster_path: movie.poster_path,\n      title: movie.title,\n      overview: movie.overview,\n      release_date: movie.release_date,\n      vote_average: movie.vote_average,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 33\n      }\n    }));\n  })) : __jsx(EmptyItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 26\n    }\n  }, \"Sorry, couldn't find any movie regarding this keyword :/\"), __jsx(LoadMore, {\n    paginate: paginate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["/home/mihajlot/movie-app-test/pages/movies/upcoming-movies.jsx"],"names":["React","useState","useEffect","MovieCard","EmptyItem","Layout","Head","LoadMore","getUpcomingMovies","searchMovie","Search","getStaticProps","upcomingMovies","props","UpcomingMovies","page","setPage","search","setSearch","currentMovies","setCurrentMovies","results","searchTimeout","length","paginate","paginatedMovies","handleSearch","event","persist","clearTimeout","setTimeout","searchValue","target","value","searchedQuery","sort","a","b","vote_average","display","flexWrap","map","movie","id","poster_path","title","overview","release_date"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport MovieCard from '../../components/MovieCard/MovieCard';\nimport EmptyItem from '../../components/EmptyItem/EmptyItem';\nimport Layout from '../../components/Layout/Layout';\nimport Head from 'next/head';\nimport LoadMore from '../../components/Shared/LoadMore/LoadMore';\nimport { getUpcomingMovies, searchMovie } from '../../services/movie-service';\nimport Search from '../../components/Shared/Search/Search';\n\nexport async function getStaticProps() {\n    const upcomingMovies = await getUpcomingMovies();\n    return { props: { upcomingMovies } }\n}\n\nexport default function UpcomingMovies({ upcomingMovies }) {\n    const [page, setPage] = useState(2);\n    const [search, setSearch] = useState(\"\");\n    const [currentMovies, setCurrentMovies] = useState(upcomingMovies.results);\n    let searchTimeout;\n\n    useEffect(() => {\n        if (search.length <= 1) {\n            setCurrentMovies(upcomingMovies.results)\n        }\n    }, [search])\n\n    async function paginate() {\n        const paginatedMovies = await getUpcomingMovies(page)\n        setCurrentMovies([...currentMovies, ...paginatedMovies.results])\n        setPage(page => page + 1);\n    }\n\n    async function handleSearch(event) {\n        event.persist();\n\n        clearTimeout(searchTimeout);\n        searchTimeout = setTimeout(async () => {\n            let searchValue = event.target.value;\n            setSearch(searchValue);\n\n            if (searchValue.length > 1) {\n                let searchedQuery = await searchMovie(searchValue);\n                if (searchedQuery.results) {\n                    searchedQuery.results.sort((a, b) => {\n                        return b.vote_average - a.vote_average;\n                    })\n                    setCurrentMovies(searchedQuery.results)\n                }\n            }\n        }, 500);\n    }\n\n\n    return (\n        <div>\n            <Layout>\n                <Search onChange={handleSearch} placeholder=\"search for movies\" />\n                <Head>\n                    <title>Upcoming Movies</title>\n                    <link rel=\"icon\" href=\"/favicon.ico\" />\n                </Head>\n                {currentMovies.length > 0 ? <div style={{ display: 'flex', flexWrap: 'wrap' }}>\n                    {currentMovies.map(movie => {\n                        return (\n                            <div key={movie.id} className=\"movie-col\">\n                                <MovieCard\n                                    id={movie.id}\n                                    poster_path={movie.poster_path}\n                                    title={movie.title}\n                                    overview={movie.overview}\n                                    release_date={movie.release_date}\n                                    vote_average={movie.vote_average}\n                                />\n                            </div>\n                        )\n                    })}\n                </div> : <EmptyItem>Sorry, couldn't find any movie regarding this keyword :/</EmptyItem>}\n                <LoadMore paginate={paginate} />\n            </Layout>\n        </div>\n\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}